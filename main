-------First Idea-----------

ffmpeg -i test7.mp4 -vf " crop=in_w-150:in_h:150:0 , lenscorrection=cx=0.5:cy=0.5:k1=0.227:k2=0.022 "  -c:a copy  crop_in_w_Pad4.mp4
//right eye frame.

ffmpeg -i test7.mp4 -vf " crop=in_w-150:in_h:0:0 , lenscorrection=cx=0.5:cy=0.5:k1=0.227:k2=0.022 "  -c:a copy  crop_in_w_Pad5.mp4
//left eye frame.

ffmpeg -i crop_in_w_Pad4.mp4  -i crop_in_w_Pad5.mp4 -filter_complex "hstack,format=yuv420p" -c:v libx264  hstack-last1.mp4
//stack the 2 frames.

-------second idea----------
   ffmpeg -i test7.mp4 -filter_complex \
       "[0]crop=in_w-15:in_h:15:0 , lenscorrection=cx=0.5:cy=0.5:k1=0.227:k2=0.022 [right];\
       [0]crop=in_w-15:in_h:0:0 , lenscorrection=cx=0.5:cy=0.5:k1=0.227:k2=0.022[left];\
        [left][right]hstack[sbs]"  -map "[sbs]" -map 0:a? hstack_last6.mp4
 //one command,  "15":odd pixel number to force different image for each eyes. 
 
 -------better program-----------
 ffmpeg -i 50.mkv -i x.png -filter_complex \
 "[0]lenscorrection=cx=0.5:cy=0.5:k1=0.167:k2=0.012,\
 split=2[tmp1][tmp2];\
[tmp1]crop=iw*(1-0.10)+1:ih-1:0.05*iw-8:0,scale=1920:-2[right];\
[tmp2]crop=iw*(1-0.10)+1:ih-1:0.05*iw+8+1:1,scale=1920:-2[left];\
[left][right]hstack[c];[1]crop=iw:ih-960:0:480[1bis];\
 [c][1bis]overlay=shortest=0"  -c:v libx265 -preset fast -crf 11 63SBS.mkv
 
  -------7.1->stereo, slightly less k1, change crop height-----------
  #http://www.sitesinvr.com/viewer/colorcross/index.html --> k1=0.30 k2=0.37
  #crop=out_w:out_h:x:y width, height, top left corner
  #right eye: 0->even number for rows, 0.05*iw-8 lenscorrection create black border that I want to remove
  #left eye: 1->odd number for rows, +8 to have virtual distance approx 3m. +1 to differenciate from right eye 
 
ffmpeg -i movie.mkv -i x.png -filter_complex \
 "[0]lenscorrection=cx=0.5:cy=0.5:k1=0.30:k2=0.37,\
 split=2[tmp1][tmp2];\
[tmp1]crop=iw*(1-0.10)+1:ih-1:0.05*iw-8:0,scale=1920:-2[right];\
[tmp2]crop=iw*(1-0.10)+1:ih-1:0.05*iw+8+1:1,scale=1920:-2[left];\
[left][right]hstack[c];[1]crop=iw:ih-960:0:480[1bis];\
 [c][1bis]overlay=shortest=0"  -c:v libx265 -preset fast -crf 11 -c:a libfdk_aac -ac 2 movieVR.mkv
 
 
  -------10 bit x265-----------
  exemple --->
 ffmpeg -i input.mp4 \
       -c:v libx265 -preset medium -crf 28 -pix_fmt yuv420p10le \
       -c:a aac -b:a 128k \
       output_10bit.mp4
       
 applied --->
ffmpeg -i movie.mkv -i x.png -filter_complex \
 "[0]lenscorrection=cx=0.5:cy=0.5:k1=0.30:k2=0.37,\
 split=2[tmp1][tmp2];\
[tmp1]crop=iw*(1-0.10)+1:ih-1:0.05*iw-8:0,scale=1920:-2[right];\
[tmp2]crop=iw*(1-0.10)+1:ih-1:0.05*iw+8+1:1,scale=1920:-2[left];\
[left][right]hstack[c];[1]crop=iw:ih-960:0:480[1bis];\
 [c][1bis]overlay=shortest=0"  -c:v libx265 -preset medium \
 -crf 14 -pix_fmt yuv420p10le -c:a libfdk_aac -ac 2 movieVR.mkv
 
-----------------10 bits not washed out (right colorimetry!!!)---------------
-----------------green background resolved with gbr->lensCorrection->yuv-----
ffmpeg -ss 01:06:23 -t 00:00:30 -i \
input.mkv \
-filter_complex \
"[0]format=gbrp10le, lenscorrection=cx=0.5:cy=0.5:k1=0.05:k2=0.06,format=yuv420p10le,\
split=2[tmp1][tmp2];\
[tmp1]crop=iw*(1-0.025*2)+1:ih-1:iw*(0.025-0.01):0,scale=1920:-2[right];\
[tmp2]crop=iw*(1-0.025*2)+1:ih-1:iw*(0.025+0.01):1,scale=1920:-2[left];\
[left][right]hstack" -c:v libx265 -crf 13 -pix_fmt yuv420p10le \
-x265-params "colorprim=bt2020:transfer=smpte2084:colormatrix=bt2020nc" output.mkv


----------------lenscorrection tweaking, multiple mkv per folder--------
for i in *.mkv;
 do name=`echo $i | cut -d'2160' -f1`;
 echo $name;
 ffmpeg -i "$i" -filter_complex \
 "[0]format=gbrp10le, lenscorrection=cx=0.5:cy=0.5:k1=0.12:k2=0.08,format=yuv420p10le,\
 split=2[tmp1][tmp2];\
 [tmp1]crop=iw*(1-0.045*2)+1:ih-1:iw*(0.045-0.002):0,scale=1920:-2[right];\
 [tmp2]crop=iw*(1-0.045*2)+1:ih-1:iw*(0.045+0.002):1,scale=1920:-2[left];\
 [left][right]hstack" -c:v libx265 -crf 10 -preset medium \
 -pix_fmt yuv420p10le \
 -x265-params "colorprim=bt2020:transfer=smpte2084:colormatrix=bt2020nc" "/Users/francois/Desktop/${i}-sbs.mkv" 
done

----------------simpler name cut, h264, 1080p, fail for raspberry pi 1GO (overheat or lack of RAM)------------
for i in *.mkv;
 do name=${i%.*}
 echo $name;
 ffmpeg -i "$i" -filter_complex \
 "format=gbrp, lenscorrection=cx=0.5:cy=0.5:k1=0.12:k2=0.08,format=yuv420p, \
 split=2[tmp1][tmp2];\
 [tmp1]crop=iw*(1-0.045*2)+1:ih-1:iw*(0.045-0.002):0,scale=1920:-2[right];\
 [tmp2]crop=iw*(1-0.045*2)+1:ih-1:iw*(0.045+0.002):1,scale=1920:-2[left];\
 [left][right]hstack" -c:v libx264 -crf 9 -preset ultrafast \
 "sbs/$name-sbs.mkv" 
done


--just tu change from yuv444
ffmpeg -i priseVideoPourSpot.mp4 -vcodec libx264 -crf 13 -preset veryfast -pix_fmt yuv420p priseVideoPourSpot3.mp4

--now use gstream?--
--to decode h265 10 bits--
gst-launch-1.0 filesrc location=<filename_10bit.mkv> ! \
 matroskademux ! queue ! h265parse ! nvv4l2decoder ! nvvidconv ! \
 
 --to encode h265 10 bits --
 gst-launch-1.0 nvarguscamerasrc ! \
'video/x-raw(memory:NVMM), width=(int)1920, height=(int)1080, \
 format=(string)NV12, framerate=(fraction)30/1' ! \
 nvvidconv ! 'video/x-raw(memory:NVMM), format=(string)I420_10LE' !
 omxh265enc ! matroskamux ! filesink location=test_10bit.mkv -e
 'video/x-raw(memory:NVMM), format=(string)NV12' ! nv3dsink -e
 
 --side by side VR headset--
 https://lubosz.wordpress.com/2013/08/28/view-side-by-side-stereoscopic-video-with-gstreamer-and-oculus-rift/

